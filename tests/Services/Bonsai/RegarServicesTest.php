<?php

declare(strict_types=1);


namespace App\Tests\Services\Bonsai;

use App\Services\RegarService;
use App\Utils\Bonsai\Tipo;
use PHPUnit\Framework\TestCase;

class RegarServicesTest extends BonsaiServiceTestBase
{
    private RegarService $service;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->service = new RegarService();
    }

    public function testRegarManzano()
    {
        $tipo = Tipo::MANZANO;

        $result = $this->service->regarBonsai($tipo);

        $this->assertEquals('frecuente', $result);
    }

    public function testRegarOlmo()
    {
        $tipo = Tipo::OLMO;

        $result = $this->service->regarBonsai($tipo);

        $this->assertEquals('muy frecuente', $result);
    }

    public function testRegarFicus()
    {
        $tipo = Tipo::FICUS;

        $result = $this->service->regarBonsai($tipo);

        $this->assertEquals('poco frecuente', $result);
    }

    public function testRegarOlivo()
    {
        $tipo = Tipo::OLIVO;

        $result = $this->service->regarBonsai($tipo);

        $this->assertEquals('poco frecuente', $result);
    }

    public function testRegarDesconocido()
    {
        $tipo = 'Peral';

        $result = $this->service->regarBonsai($tipo);

//        $this->assertEquals('poco frecuente', $result);
        self::assertNull($result);
    }

    public function testRegarManzanoAgosto()
    {
        $this->service = new RegarService(8);

        $tipo = Tipo::MANZANO;

        $result = $this->service->regarBonsai($tipo);

        $this->assertEquals('muy frecuente', $result);
    }

    public function testRegarOlivoJulio()
    {
        $this->service = new RegarService(7);

        $tipo = Tipo::OLIVO;

        $result = $this->service->regarBonsai($tipo);

        $this->assertEquals('muy frecuente', $result);
    }
}